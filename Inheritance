using System;
using System.Security.Cryptography.X509Certificates;
class test
{
   public  int x = 34;
   public  int d1()
    {
        return 2;    }
}
 
class program2:test
{
    
   
    public  void display(int a, int b , out int c)
    {
        c= a+b;
        Console.WriteLine(c);
    }
    
   public static void Main(string[] args)
    {

        program2 p = new program2();
        Console.WriteLine(p.d1());
        
        p.display(1,2,out int d);
        third t = new third();
        Console.WriteLine(t.s);



    }
}
class third:program2
{
  public  int m = 45;
   public string s = "Hello";
}
//HEIRARCHICAL INHERITANCE
using System;
using System.Security.Cryptography.X509Certificates;
class test
{
   public  int x = 34;
   public  void d1()
    {
        Console.WriteLine("Parent class");
    }
}
 
class program2:test
{
    
   
    public  void display()
    {
       
        Console.WriteLine("First Child");
    }
    
   public static void Main(string[] args)
    {
        Console.WriteLine("THis is hierarchical inheritance");

        program2 p = new program2();
        p.display();
        p.d1();
        
        
        third t = new third();
        t.d1();
        
        Console.WriteLine(t.s);




    }
}
class third:test
{

   public string s = "Hello I am third child";
}


//
 public class Employee  
    {  
       public float salary = 40000;  
   }  
   public class Programmer: Employee  
   {  
       public float bonus = 10000;  
   }  
   class TestInheritance{  
       public static void Main(string[] args)  
        {  
            Programmer p1 = new Programmer();  
  
            Console.WriteLine("Salary: " + p1.salary);  
            Console.WriteLine("Bonus: " + p1.bonus);  
  
        }  
    }  

//


class Vehicle  // base class (parent) 
{
  public string brand = "Ford";  // Vehicle field
  public void honk()             // Vehicle method 
  {                    
    Console.WriteLine("Tuut, tuut!");
  }
}

class Car : Vehicle  // derived class (child)
{
  public string modelName = "Mustang";  // Car field
}

class Program
{
  static void Main(string[] args)
  {
    // Create a myCar object
    Car myCar = new Car();

    // Call the honk() method (From the Vehicle class) on the myCar object
    myCar.honk();

    // Display the value of the brand field (from the Vehicle class) and the value of the modelName from the Car class
    Console.WriteLine(myCar.brand + " " + myCar.modelName);
  }
}


